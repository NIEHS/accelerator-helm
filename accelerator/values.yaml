# Default values for accelerator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "accelerator"

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

#--------------------- mongo -------------------------

mongodb:

  # see https://artifacthub.io/packages/helm/bitnami/mongodb for values

  image:
    registry: docker.io
    repository: bitnami/mongodb
    tag: 8.0.8-debian-12-r0
    digest: ""
    ## Specify a imagePullPolicy
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent

  ##
  architecture: standalone
  ## @param useStatefulSet Set to true to use a StatefulSet instead of a Deployment (only when `architecture=standalone`)
  ##
  useStatefulSet: false
  ## MongoDB(&reg;) Authentication parameters
  ##

  auth:
    ## @param auth.enabled Enable authentication
    ## ref: https://docs.mongodb.com/manual/tutorial/enable-authentication/
    ##
    enabled: true
    ## @param auth.rootUser MongoDB(&reg;) root user
    ##
    rootUser: root
    ## @param auth.rootPassword MongoDB(&reg;) root password
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mongodb#setting-the-root-user-and-password-on-first-run
    ##
    rootPassword: ""
    ## MongoDB(&reg;) custom users and databases
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mongodb#creating-a-user-and-database-on-first-run
    ## @param auth.usernames List of custom users to be created during the initialization
    ## @param auth.passwords List of passwords for the custom users set at `auth.usernames`
    ## @param auth.databases List of custom databases to be created during the initialization
    ##
    usernames: []
    passwords: []
    databases: []


#--------------------- END mongo ---------------------




#--------------------- airflow -------------------------

airflow:

  # see https://artifacthub.io/packages/helm/apache-airflow/airflow for values

  # Ingress configuration
  ingress:
    # Enable all ingress resources (deprecated - use ingress.web.enabled and ingress.flower.enabled)
    enabled: ~

    # Configs for the Ingress of the web Service
    web:
      # Enable web ingress resource
      enabled: false

      # Annotations for the web Ingress
      annotations: {}

      # The path for the web Ingress
      path: "/"

      # The pathType for the above path (used only with Kubernetes v1.19 and above)
      pathType: "ImplementationSpecific"

      # The hostname for the web Ingress (Deprecated - renamed to `ingress.web.hosts`)
      host: ""

      # The hostnames or hosts configuration for the web Ingress
      hosts: []
      #   # The hostname for the web Ingress (templated)
      # - name: ""
      #   # configs for web Ingress TLS
      #   tls:
      #     # Enable TLS termination for the web Ingress
      #     enabled: false
      #     # the name of a pre-created Secret containing a TLS private key and certificate
      #     secretName: ""

      # The Ingress Class for the web Ingress (used only with Kubernetes v1.19 and above)
      ingressClassName: ""

      # configs for web Ingress TLS (Deprecated - renamed to `ingress.web.hosts[*].tls`)
      tls:
        # Enable TLS termination for the web Ingress
        enabled: false
        # the name of a pre-created Secret containing a TLS private key and certificate
        secretName: ""


#--------------------- END airflow -------------------------
