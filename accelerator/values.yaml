
# in local values, python3 -c 'import secrets; print(secrets.token_hex(16))'
webserverSecretKey: needtogeneratethis


#--------------------- mongo -------------------------

mongodb:

  # see https://artifacthub.io/packages/helm/bitnami/mongodb for values

  image:
    registry: docker.io
    repository: bitnami/mongodb
    tag: 8.0.8-debian-12-r0
    digest: ""
    ## Specify a imagePullPolicy
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent

  ##
  architecture: standalone
  ## @param useStatefulSet Set to true to use a StatefulSet instead of a Deployment (only when `architecture=standalone`)
  ##
  useStatefulSet: false
  ## MongoDB(&reg;) Authentication parameters
  ##

  auth:
    ## @param auth.enabled Enable authentication
    ## ref: https://docs.mongodb.com/manual/tutorial/enable-authentication/
    ##
    enabled: true
    ## @param auth.rootUser MongoDB(&reg;) root user
    ##
    rootUser: root
    ## @param auth.rootPassword MongoDB(&reg;) root password
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mongodb#setting-the-root-user-and-password-on-first-run
    ##
    rootPassword: ""
    ## MongoDB(&reg;) custom users and databases
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mongodb#creating-a-user-and-database-on-first-run
    ## @param auth.usernames List of custom users to be created during the initialization
    ## @param auth.passwords List of passwords for the custom users set at `auth.usernames`
    ## @param auth.databases List of custom databases to be created during the initialization
    ##
    usernames: []
    passwords: []
    databases: []


  ## Service parameters
  ##
  service:
    ## @param service.nameOverride MongoDB(&reg;) service name
    ##
    nameOverride: "mongo-service"
    ## @param service.type Kubernetes Service type (only for standalone architecture)
    ##
    type: ClusterIP
    ## @param service.portName MongoDB(&reg;) service port name (only for standalone architecture)
    ##
    portName: mongodb
    ## @param service.ports.mongodb MongoDB(&reg;) service port.
    ##
    ports:
      mongodb: 27017
    ## @param service.nodePorts.mongodb Port to bind to for NodePort and LoadBalancer service types (only for standalone architecture)
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    nodePorts:
      mongodb: ""
    ## @param service.clusterIP MongoDB(&reg;) service cluster IP (only for standalone architecture)
    ## e.g:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param service.externalIPs Specify the externalIP value ClusterIP service type (only for standalone architecture)
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
    ##
    externalIPs: []
    ## @param service.loadBalancerIP loadBalancerIP for MongoDB(&reg;) Service (only for standalone architecture)
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
    ##
    loadBalancerIP: ""
    ## @param service.loadBalancerClass loadBalancerClass for MongoDB(&reg;) Service (only for standalone architecture)
    # ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class
    loadBalancerClass: ""
    ## @param service.loadBalancerSourceRanges Address(es) that are allowed when service is LoadBalancer (only for standalone architecture)
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ##
    loadBalancerSourceRanges: []
    ## @param service.allocateLoadBalancerNodePorts Wheter to allocate node ports when service type is LoadBalancer
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-nodeport-allocation
    ##
    allocateLoadBalancerNodePorts: true
    ## @param service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
    ##
    extraPorts: []
    ## @param service.annotations Provide any additional annotations that may be required
    ##
    annotations: {}
    ## @param service.externalTrafficPolicy service external traffic policy (only for standalone architecture)
    ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Local
    ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
    ## Headless service properties
    ##
    headless:
      ## @param service.headless.annotations Annotations for the headless service.
      ##
      annotations: {}
    ## @param service.publishNotReadyAddresses Indicates that any agent which deals with endpoints for this Service should disregard any indications of ready/not-ready
    ## ref: https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/
    ##
    publishNotReadyAddresses: false


#--------------------- END mongo ---------------------


#--------------------- airflow -------------------------

airflow:

  # see https://artifacthub.io/packages/helm/apache-airflow/airflow for values
  # values file: https://github.com/apache/airflow/blob/main/chart/values.yaml

  # Default values for accelerator.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicaCount: 1

  # This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []
  # This is to override the chart name.
  nameOverride: "accelerator-airflow"
  fullnameOverride: "accelerator-airflow"

  # This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "accelerator"

  # custom airflow image with accel dependencies, see: https://github.com/NIEHS/accelerator-helm/pkgs/container/accel-airflow
  images:
    airflow:
      repository: ghcr.io/niehs/accel-airflow
      tag: latest
  
#--------------------- END airflow -------------------------
